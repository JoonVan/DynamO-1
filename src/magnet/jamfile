#    DYNAMO:- Event driven molecular dynamics simulator 
#    http://www.marcusbannerman.co.uk/dynamo
#    Copyright (C) 2009  Marcus N Campbell Bannerman <m.bannerman@gmail.com>
#
#    This program is free software: you can redistribute it and/or
#    modify it under the terms of the GNU General Public License
#    version 3 as published by the Free Software Foundation.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

import ./jam/builddep ;

obj ffmpeg_test : tests/ffmpeg_test.cpp /system//libavcodec : <include>. ;

project	: requirements
	  [ builddep.set-feature-on-build magnet-OpenCL : /opencl//test : "Magnet: OpenCL libraries and headers (optional)" : symmetric ]
	: default-build release : build-dir $(BUILD_DIR_PATH) ;

alias magnet : /system//dl : : : <include>. <variant>debug:<define>MAGNET_DEBUG <toolset>gcc,<variant>debug:<linkflags>-rdynamic <variant>fulldebug:<define>MAGNET_DEBUG  <magnet-OpenCL>yes:<source>/opencl//OpenCL <magnet-OpenCL>yes:<define>MAGNET_CLGL ;

install install-magnet : [ glob magnet/*.hpp magnet/*/*.hpp magnet/*/*/*.hpp magnet/*/*/*/*.hpp magnet/*/*/*/*/*.hpp ] : <location>$(INCLUDE_INSTALL_PATH) <install-source-root>./ ;
      
##################### TESTS ######################
using testing ;

#####################OPENCL
#### Prefix Scan ####
unit-test scan_test : tests/scan_test.cpp magnet /opencl//OpenCL ;

#### Radix Sort ####
unit-test radixsort_NVIDIA_test : tests/radixsort_NVIDIA_test.cpp magnet /opencl//OpenCL scan_test ;
unit-test radixsort_AMD_test : tests/radixsort_AMD_test.cpp magnet /opencl//OpenCL scan_test ;

#### Bitonic Sort ####
unit-test bitonicsort_test : tests/bitonicsort_test.cpp magnet /opencl//OpenCL ;

#### Heap Sort ####
unit-test heapsort_test : tests/heapsort_test.cpp magnet /opencl//OpenCL ;

unit-test sorter_test : tests/sorter_test.cpp magnet /opencl//OpenCL ;

alias opencl-test : scan_test radixsort_NVIDIA_test radixsort_AMD_test bitonicsort_test heapsort_test /opencl//OpenCL sorter_test : <magnet-OpenCL>no:<build>no ;

#################### THREAD ######################
unit-test threadpool_test : tests/threadpool_test.cpp magnet : <threading>multi : <linkflags>"-Wl,--no-as-needed" ;

alias thread-test : threadpool_test :  ;

#################### MATH ########################

unit-test cubic-quartic-test : tests/cubic_quartic_test.cpp magnet /system//boost_unit_test_framework ;
unit-test vector-test : tests/vector_test.cpp magnet /system//boost_unit_test_framework ;
unit-test quaternion-test : tests/quaternion_test.cpp magnet /system//boost_unit_test_framework ;
unit-test dilate-test : tests/dilate_test.cpp magnet /system//boost_unit_test_framework ;
unit-test spline-test : tests/splinetest.cpp /opencl//OpenCL magnet ;
unit-test judy-test : tests/judy_test.cpp magnet /system//judy /system//boost_unit_test_framework ;
alias math-test : dilate-test cubic-quartic-test vector-test spline-test quaternion-test ;

################### INTERSECTION/OVERLAP #######################

unit-test plane-test : tests/plane_intersection.cpp magnet /system//boost_unit_test_framework ;
alias intersection-test : plane-test ;

##################################################
alias test : opencl-test thread-test math-test judy-test intersection-test ;
##################################################
